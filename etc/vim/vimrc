if has('nvim')
  set listchars+=eol:$
  set runtimepath^=~/.vim
  set runtimepath+=~/.vim/after
  set runtimepath+=~/.vim/plugin
  let &packpath = &runtimepath
else
  set autoindent
  set backspace=indent,eol,start
  set hidden
  set hlsearch incsearch
  set pastetoggle=<C-s>
  set showcmd
  set laststatus=2
  set ttymouse=sgr
  filetype plugin indent on
endif

set backupdir^=$HOME/.vim/tmp// directory^=$HOME/.vim/tmp//
set ignorecase smartcase
set mouse=a
set nowrap
set scrolloff=1
set showbreak=>\
set smartindent
set statusline=%F\ %r%m%=L%l/%L\ %y
let g:netrw_banner = 0

inoremap <C-a> <esc>0i
inoremap <C-e> <esc>$i<right>
nnoremap <Backspace> <C-b>
nnoremap <Space> <C-f>
nnoremap <C-n> :bnext<cr>
nnoremap <C-p> :bprevious<cr>
nnoremap <cr> :nohlsearch<cr>
nnoremap <leader>d :read !datehead<cr>
nnoremap <leader>l :lcd %:p:h<cr>
nnoremap <leader>r :read !<C-r><C-l><cr>
nnoremap <leader>t :belowright terminal<cr>i
nnoremap <leader>u yypVr-
vnoremap <leader>y "+y
nnoremap <leader><Backspace> :%s/\s\+$//e<cr>:nohlsearch<cr>:echo "Removed trailing whitespace."<cr>
nnoremap <Tab> za

augroup whitespace
  autocmd!
  autocmd InsertEnter * match TrailingWhitespace /\s\+\%#\@<!$/
  autocmd BufWritePost,InsertLeave * match TrailingWhitespace /\s\+$/
  autocmd ColorScheme * hi link TrailingWhitespace SpellBad
augroup END

augroup colorOverrides
  autocmd ColorScheme * hi! link hoonArm Identifier
  autocmd ColorScheme * hi! link hoonAtomType Type
  autocmd ColorScheme * hi! link hoonCubeType Type
  autocmd ColorScheme * hi! link hoonNumber Number
  autocmd ColorScheme * hi! link scalaCapitalWord Type
  autocmd ColorScheme * hi! link scalaInstanceDeclaration Identifier
  autocmd ColorScheme * hi! link scalaSpecial Normal
augroup END

" enable italics
let &t_ZH="\e[3m"
let &t_ZR="\e[23m"

colorscheme calm

if !exists('g:vscode')
  if empty(glob('~/.vim/autoload/plug.vim'))
    silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    autocmd VimEnter * PlugInstall --sync | runtime $MYVIMRC
  endif
  call plug#begin('~/.vim/plug')
  Plug 'mhinz/vim-signify'
  Plug 'chrisbra/Colorizer'
  Plug 'f-person/auto-dark-mode.nvim'
  Plug 'hrsh7th/nvim-cmp'
  Plug 'neovim/nvim-lspconfig'
  Plug 'urbit/hoon.vim'
  call plug#end()

  if has('nvim')
    lua << EOF
    require'lspconfig'.hoon_ls.setup{
      cmd = { "hoon-language-server", "-p", "8080" },
      filetypes = { "hoon" },
      single_file_support = true
    }

    local auto_dark_mode = require('auto-dark-mode')
    auto_dark_mode.setup({
      update_interval = 1000,
      set_dark_mode = function()
        vim.api.nvim_set_option('background', 'dark')
        vim.cmd('colorscheme calm')
      end,
      set_light_mode = function()
        vim.api.nvim_set_option('background', 'light')
        vim.cmd('colorscheme calm')
      end,
    })
    auto_dark_mode.init()
EOF
  else
    call plug#begin('~/.vim/plug')
    Plug 'tpope/vim-commentary'
    call plug#end()
  endif
endif
